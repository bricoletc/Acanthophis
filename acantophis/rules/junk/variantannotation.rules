rule snpeffdb:
    input:
        fa="{path}.fa",
        gff="{path}.gff"
    output:
        snpeff="{path}.snpeff.db"


rule snpeff:
    input:
       vcf="data/variants/final/{caller}~{aligner}~{ref}~{sampleset}~filtered-{filter}.vcf.gz",
       bed="metadata/contigs_of_interest.bed",
    output:
        vcf="output/annotated_variants/snpeff/{database}/{caller}~{aligner}~{ref}~{sampleset}~filtered-{filter}~snpEff.vcf.gz",
        csv="output/annotated_variants/snpeff/{database}/{caller}~{aligner}~{ref}~{sampleset}~filtered-{filter}.csv",
        html="output/annotated_variants/snpeff/{database}/{caller}~{aligner}~{ref}~{sampleset}~filtered-{filter}.html",
    log:
        "output/log/snpeff/{database}/{caller}~{aligner}~{ref}~{sampleset}~filtered-{filter}~snpeff.log"
    params:
        database=lambda wc: config["snpeff"][wc.reference]['database'],
        extra="-Xmx6g -v"
    shell:
        "( snpEff ann"
        " -filterInterval {input.bed}"
        " -csvStats {output.csv}"
        " -htmlStats {output.html}"
        " {params.extra}"
        " {params.database}"
        " {input.vcf}"
        " > {output.vcf}"
        " ) >'{log}' 2>&1"

